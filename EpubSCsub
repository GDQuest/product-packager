Import("env")
import scons_helper as helper

helper.success_log("Attempting Epub build")

env["BUILD_DIR"] = "EpubBuild/"
env["DIST_DIR"] = "EpubDist/"
VariantDir(env["BUILD_DIR"], env["src"], duplicate=False)

EpubBuilder = Builder(action=helper.convert_to_epub,
        suffix='.epub',
        )

env['BUILDERS']["EpubBuilder"] = EpubBuilder

ChapterBuilder = Builder(action=helper.build_chapter_md,
        suffix='.md',
        )

env['BUILDERS']["ChapterBuilder"] = ChapterBuilder

ilist = []
for image_path in env["images"]:
    ilist.append(Install(env["BUILD_DIR"] + "images/", image_path.as_posix()))

vlist = []
for video_path in env["videos"]:
    vlist.append(Install(env["BUILD_DIR"] + "videos/", video_path.as_posix()))
new_list = []

chapter_tiers = {}
for markdown_path in env["markdown_files"]:
    targ = env["BUILD_DIR"] + markdown_path.name
    # InstallAs allows us to rename the file to avoid collisions. include the dir name for collision avoidance
    # TODO: for each chapter, combine the contents into one md file
    new_md_file = env["BUILD_DIR"] + markdown_path.parent.stem + markdown_path.name

    installed_md = InstallAs(new_md_file, markdown_path.as_posix())

    if markdown_path.parent.name not in chapter_tiers.keys():
        chapter_tiers[markdown_path.parent.name] = [installed_md]
    else:
        chapter_tiers[markdown_path.parent.name].append(installed_md)
    new_list.append(new_md_file)
env["installed_md_files"] = []
sorted_chapters = list(chapter_tiers.keys())
sorted_chapters.sort()
for chapter in sorted_chapters:
    built_chapter = env.ChapterBuilder(env["BUILD_DIR"] + chapter + ".md", chapter_tiers[chapter])
    # build_html_file = env.HTMLBuilder(env["BUILD_DIR"] + chapter + ".md")
    env["installed_md_files"].append(built_chapter)
    for md in chapter_tiers[chapter]:
        env.AddPostAction(built_chapter, Delete(md))
    # build_html_file = env.HTMLBuilder(env["BUILD_DIR"] + chapter + ".md")
    # for dependency in ilist:
    #     Depends(build_html_file, dependency)
    # for dependency in vlist:
    #     Depends(build_html_file, dependency)
    # Depends(build_html_file, built_chapter)
    # env["installed_md_files"].append(build_html_file)


meta_file, cover_file = helper.get_epub_metadata(env["src"])
meta = Install(env["BUILD_DIR"], meta_file)
cover = Install(env["BUILD_DIR"], cover_file)
css = Install(env["BUILD_DIR"], helper.get_epub_css())

dependencies = ilist + vlist + env["installed_md_files"] + [meta, cover, css]

build_epub_file = env.EpubBuilder(env["BUILD_DIR"] + "output.epub", dependencies)

for dependency in dependencies:
    Depends(build_epub_file, dependency)

#TODO:
"""
cleanup all the files
add syntax highlighting
work on title formatting
"""